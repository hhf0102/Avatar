{"version":3,"sources":["component/AvatarRoom/images/pokeball.svg","component/AvatarRoom/images/pikachu.svg","component/AvatarRoom/images/bulbasaur.svg","component/AvatarRoom/images/squirtle.svg","component/AvatarRoom/images/eevee.svg","component/AvatarRoom/images/gengar.svg","component/AvatarRoom/images/charmander.svg","component/AvatarRoom/images/jigglypuff.svg","component/AvatarRoom/images/meowth.svg","store/avatarRoom/action.js","store/avatarRoom/reducer.js","store/avatarRoom/selector.js","component/AvatarRoom/Avatar.jsx","component/AvatarRoom/HealthBar.jsx","component/AvatarRoom/userList.js","component/AvatarRoom/ContextBridge.js","component/AvatarRoom/AvatarRoom.jsx","serviceWorker.js","index.js"],"names":["module","exports","createActions","SET_TARGET_POSITION","targetPosition","SET_MY_POSITION","position","index","SET_TARGET_RESET","SET_TEAM_A_H_P","hp","SET_TEAM_B_H_P","setTargetPosition","setMyPosition","setTargetReset","setTeamAHP","setTeamBHP","setGameOver","handleActions","state","action","payload","myPositionA","findIndex","myPositionB","targetPositionListA","isHit","targetPositionListB","teamAHp","teamBHp","gameOver","avatar0","avatar1","avatar2","avatar3","avatar4","avatar5","avatar6","avatar7","avatar8","avatar9","avatar10","avatar11","avatar12","avatar13","avatar14","avatar15","avatar16","avatar17","avatar18","avatar19","avatar20","avatar21","avatar22","avatar23","avatar24","getTeamAHp","getTeamBHp","Avatar","avatarX","avatarY","avatarOffsetX","avatarOffsetY","avatarListARow","avatarListACol","options","avatarListOffsetY","avatarIcon","gameOverA","gameOverB","app","useApp","dispatch","useDispatch","actionDisabled","useRef","targetAvatarPosition","shakeRate","avatarRef","Array","map","createRef","randomAngle","Math","round","random","useSelector","width","getTeamAAvatarIsHit","getTeamBAvatarIsHit","stuffRef","gameOverARef","gameOverBRef","current","currentAvatarPosition","useEffect","idx","ticker","add","currentAvatar","angle","setInterval","currentStuff","stuffX","x","stuffY","y","jumpHeight","vy","alpha","floor","jump","remove","target","shootWithParameter","vx","handleAction","setTimeout","image","height","anchor","ref","pokeball","textStyle","TextStyle","fill","fontSize","HealthBar","healthHeight","setGameOverState","healthOuterWidth","textHp","commonProps","textPosition","healthInnerWidth","draw","g","beginFill","drawRect","endFill","clear","text","style","iconList","pikachu","bulbasaur","squirtle","eevee","gengar","charmander","jigglypuff","meowth","generateUserList","user","avatar","length","gift","userListAWithSorted","sort","a","b","userListBWithSorted","ContextBridge","render","Context","children","Consumer","value","Provider","window","innerWidth","transparent","AvatarRoom","avatarListA","avatarListB","avatarListAAvatarX","avatarListAAvatarY","avatarListBAvatarX","avatarListBAvatarY","healthBarBPosition","useState","setGameOverA","setGameOverB","ReactReduxContext","key","Boolean","location","hostname","match","store","createStore","avatarRoomReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,yJCSvCC,YACF,CACEC,oBAAqB,SAAAC,GAAc,MAAK,CACtCA,mBAEFC,gBAAiB,SAACC,EAAUC,GAAX,MAAsB,CACrCD,WACAC,UAEFC,iBAAkB,SAACF,EAAUC,GAAX,MAAsB,CACtCD,WACAC,UAEFE,eAAgB,SAAAC,GAAE,MAAK,CACrBA,OAEFC,eAAgB,SAAAD,GAAE,MAAK,CACrBA,QAGJ,iBA1BAE,E,EAAAA,kBACAC,E,EAAAA,cACAC,E,EAAAA,eACAC,E,EAAAA,WACAC,E,EAAAA,WACAC,E,EAAAA,Y,ylBCJK,IAgEQC,eAAa,mBAEvBN,GAAoB,SAACO,EAAOC,GAAY,IAC/BhB,EAAmBgB,EAAOC,QAA1BjB,eAEFG,EAAQH,EAAe,GAAK,IAChCe,EAAMG,YAAYC,WAChB,SAAAjB,GAAQ,OAAIA,EAAS,KAAOF,EAAe,IAAME,EAAS,KAAOF,EAAe,MAElFe,EAAMK,YAAYD,WAAU,SAAAjB,GAAQ,OAAIA,EAAS,KAAOF,EAAe,IAAME,EAAS,KAAOF,EAAe,MAE9G,OAAIA,EAAe,GAAK,IACf,EAAP,GAAYe,EAAZ,CAAmBM,oBAAoB,EAAD,GAAON,EAAMM,oBAAb,+BAA4ClB,GAAU,CAAEmB,OAAO,OAE9F,EAAP,GAAYP,EAAZ,CAAmBQ,oBAAoB,EAAD,GAAOR,EAAMQ,oBAAb,+BAA4CpB,GAAU,CAAEmB,OAAO,UAdjF,cAiBvBb,GAAgB,SAACM,EAAOC,GAAY,IAAD,EACNA,EAAOC,QAA3Bf,EAD0B,EAC1BA,SAD0B,EAChBC,MAClB,OAAID,EAAS,GAAK,IACT,EAAP,GAAYa,EAAZ,CAAmBG,YAAY,GAAD,mBAAMH,EAAMG,aAAZ,CAAyBhB,MAEhD,EAAP,GAAYa,EAAZ,CAAmBK,YAAY,GAAD,mBAAML,EAAMK,aAAZ,CAAyBlB,SAtBnC,cAyBvBQ,GAAiB,SAACK,EAAOC,GAAY,IAAD,EACPA,EAAOC,QAA3Bf,EAD2B,EAC3BA,SAAUC,EADiB,EACjBA,MAClB,OAAID,EAAS,GAAK,IACT,EAAP,GAAYa,EAAZ,CAAmBM,oBAAoB,EAAD,GAAON,EAAMM,oBAAb,+BAA4ClB,GAAU,CAAEmB,OAAO,OAE9F,EAAP,GAAYP,EAAZ,CAAmBQ,oBAAoB,EAAD,GAAOR,EAAMQ,oBAAb,+BAA4CpB,GAAU,CAAEmB,OAAO,UA9BjF,cAiCvBX,GAAa,SAACI,EAAOC,GAAY,IACxBV,EAAOU,EAAOC,QAAdX,GACR,OAAO,EAAP,GACKS,EADL,CAEES,QAAST,EAAMS,QAAU,EAAIT,EAAMS,QAAUlB,EAAK,OArC9B,cAwCvBM,GAAa,SAACG,EAAOC,GAAY,IACxBV,EAAOU,EAAOC,QAAdX,GACR,OAAO,EAAP,GACKS,EADL,CAEEU,QAASV,EAAMU,QAAU,EAAIV,EAAMU,QAAUnB,EAAK,OA5C9B,cA+CvBO,GAAc,SAAAE,GAAK,YACfA,EADe,CAElBW,UAAU,OAjDY,GA9DA,CAC1BA,UAAU,EACVF,QAAS,IACTC,QAAS,IACTP,YAAa,GACbE,YAAa,GACbC,oBAAqB,CACnBM,QAAS,CAAEL,OAAO,GAClBM,QAAS,CAAEN,OAAO,GAClBO,QAAS,CAAEP,OAAO,GAClBQ,QAAS,CAAER,OAAO,GAClBS,QAAS,CAAET,OAAO,GAClBU,QAAS,CAAEV,OAAO,GAClBW,QAAS,CAAEX,OAAO,GAClBY,QAAS,CAAEZ,OAAO,GAClBa,QAAS,CAAEb,OAAO,GAClBc,QAAS,CAAEd,OAAO,GAClBe,SAAU,CAAEf,OAAO,GACnBgB,SAAU,CAAEhB,OAAO,GACnBiB,SAAU,CAAEjB,OAAO,GACnBkB,SAAU,CAAElB,OAAO,GACnBmB,SAAU,CAAEnB,OAAO,GACnBoB,SAAU,CAAEpB,OAAO,GACnBqB,SAAU,CAAErB,OAAO,GACnBsB,SAAU,CAAEtB,OAAO,GACnBuB,SAAU,CAAEvB,OAAO,GACnBwB,SAAU,CAAExB,OAAO,GACnByB,SAAU,CAAEzB,OAAO,GACnB0B,SAAU,CAAE1B,OAAO,GACnB2B,SAAU,CAAE3B,OAAO,GACnB4B,SAAU,CAAE5B,OAAO,GACnB6B,SAAU,CAAE7B,OAAO,IAErBC,oBAAqB,CACnBI,QAAS,CAAEL,OAAO,GAClBM,QAAS,CAAEN,OAAO,GAClBO,QAAS,CAAEP,OAAO,GAClBQ,QAAS,CAAER,OAAO,GAClBS,QAAS,CAAET,OAAO,GAClBU,QAAS,CAAEV,OAAO,GAClBW,QAAS,CAAEX,OAAO,GAClBY,QAAS,CAAEZ,OAAO,GAClBa,QAAS,CAAEb,OAAO,GAClBc,QAAS,CAAEd,OAAO,GAClBe,SAAU,CAAEf,OAAO,GACnBgB,SAAU,CAAEhB,OAAO,GACnBiB,SAAU,CAAEjB,OAAO,GACnBkB,SAAU,CAAElB,OAAO,GACnBmB,SAAU,CAAEnB,OAAO,GACnBoB,SAAU,CAAEpB,OAAO,GACnBqB,SAAU,CAAErB,OAAO,GACnBsB,SAAU,CAAEtB,OAAO,GACnBuB,SAAU,CAAEvB,OAAO,GACnBwB,SAAU,CAAExB,OAAO,GACnByB,SAAU,CAAEzB,OAAO,GACnB0B,SAAU,CAAE1B,OAAO,GACnB2B,SAAU,CAAE3B,OAAO,GACnB4B,SAAU,CAAE5B,OAAO,GACnB6B,SAAU,CAAE7B,OAAO,MC5DjB8B,EAAa,SAAArC,GAAK,OAAIA,EAAMS,SAC5B6B,EAAa,SAAAtC,GAAK,OAAIA,EAAMU,SCgMnB6B,EAtLA,SAAC,GAaT,IAZLnD,EAYI,EAZJA,MACAoD,EAWI,EAXJA,QACAC,EAUI,EAVJA,QACAC,EASI,EATJA,cACAC,EAQI,EARJA,cACAC,EAOI,EAPJA,eACAC,EAMI,EANJA,eACAC,EAKI,EALJA,QACAC,EAII,EAJJA,kBACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,UACAC,EACI,EADJA,UAEMC,EAAMC,mBACNC,EAAWC,cACXC,EAAiBC,kBAAO,GAC1BC,EAAuB,GACvBC,EAAY,EAIVC,EAAYH,iBAAO,YAAII,MAAMxE,EAAQ,IAAIyE,KAAI,kBAAMC,0BACnDC,EAAcC,KAAKC,MAAsB,GAAhBD,KAAKE,SAAgB,IAC9C3D,EAAQ4D,YAAY3B,EAAUM,EAAQsB,MAAQ,ED9B1B,SAAAhF,GAAK,OAAI,SAAAY,GAAK,OAAIA,EAAMM,oBAAN,gBAAmClB,IAASmB,OC8BhC8D,CAAoBjF,GD7BlD,SAAAA,GAAK,OAAI,SAAAY,GAAK,OAAIA,EAAMQ,oBAAN,gBAAmCpB,IAASmB,OC6BH+D,CAAoBlF,IAInGmF,EAAWf,iBAAO,YAAII,MAAMxE,EAAQ,IAAIyE,KAAI,kBAAMC,0BAElDU,EAAehB,mBACfiB,EAAejB,mBACrBgB,EAAaE,QAAUzB,EACvBwB,EAAaC,QAAUxB,EAEvB,IAAMyB,EAAwB,CAACnC,EAASC,GA0GxC,OAxBAmC,qBAAU,WAhFI,IAAAC,EAiFZxB,EAAS3D,EAAciF,EAAuBvF,IAC9C+D,EAAI2B,OAAOC,KAlFCF,EAkFSzF,EAlFF,WACnB,IAAM4F,EAAgBrB,EAAUe,QAAQG,GAAKH,QAC7CM,EAAcC,OAASvB,GACnBsB,EAAcC,MAAQ,IAAMD,EAAcC,OAAS,MACrDvB,IAAc,MA+EhBwB,aAAY,WACL3B,EAAemB,SAAYnE,GAAWiE,EAAaE,SAAWD,EAAaC,SA5E/D,SAAAG,GAAG,OAAI,WAC1BtB,EAAemB,SAAU,EACzB,IAAMM,EAAgBrB,EAAUe,QAAQG,GAAKH,QACvCS,EAAeZ,EAASG,QAAQG,GAAKH,QACrCU,EAASD,EAAaE,EACtBC,EAASH,EAAaI,EACtBC,EAAaR,EAAcO,EAAI,GACrCP,EAAcS,GAAK,EACnBN,EAAaO,MAAQ,EAGnBjC,EADEuB,EAAcK,EAAIvC,EAAQsB,MAAQ,EACb,CACrB1B,EAAgBsB,KAAK2B,MAAM3B,KAAKE,SAAWrB,EAAiB,GAC5DE,EAAoBJ,EAAgBqB,KAAK2B,MAAM3B,KAAKE,SAAWtB,IAG1C,CACrBE,EAAQsB,MAAQ1B,EAAgBsB,KAAK2B,MAAM3B,KAAKE,SAAWrB,EAAiB,GAC5EE,EAAoBJ,EAAgBqB,KAAK2B,MAAM3B,KAAKE,SAAWtB,IAiDnEO,EAAI2B,OAAOC,KA7CE,SAAPa,IACJZ,EAAcO,GAAKP,EAAcS,GAC7BT,EAAcO,EAAIC,IACpBR,EAAcS,KAAO,GAEnBT,EAAcO,GAAK9C,IACrBuC,EAAcS,GAAK,EACnBT,EAAcO,EAAI9C,EAClBU,EAAI2B,OAAOe,OAAOD,OAsCtB,IAlCelB,EAASoB,EAkClBC,GAlCSrB,EAkCkBC,EAlCTmB,EAkCgCrC,EAlCrB,YAeT0B,EAAaa,GAAK,GAAKb,EAAaE,EAAI5B,EAAqB,IACjF0B,EAAaa,GAAK,GAAKb,EAAaE,EAAI5B,EAAqB,MAG/DF,EAAemB,SAAU,EACzBrB,EAASI,EAAqB,GAAKX,EAAQsB,MAAQ,EAAIvE,EAnB1C,KAmB+DD,EAnB/D,MAoBbyD,EAAS5D,EAAkBgE,IAjB3B0B,EAAaa,GAAK,EAClBb,EAAaM,GAAK,EAClBtC,EAAI2B,OAAOe,OAAOE,GAIlBZ,EAAaE,EAAID,EACjBD,EAAaI,EAAID,EACjBH,EAAaO,MAAQ,GAcvBP,EAAaa,IAAMF,EAAO,GAAKpB,EAAQ,IAAM,IAC7CS,EAAaM,IAAMK,EAAO,GAAKpB,EAAQ,IAAM,IAE7CS,EAAaE,GAAKF,EAAaa,GAC/Bb,EAAaI,GAAKJ,EAAaM,KAKjCtC,EAAI2B,OAAOC,IAAIgB,IAQXE,CAAa7G,EAAb6G,KAEDjC,KAAK2B,MAAsB,IAAhB3B,KAAKE,SAAmB,QACrC,IAEHU,qBAAU,WACR,IAAMI,EAAgBrB,EAAUe,QAAQtF,GAAOsF,QAC3CnE,IACEyE,EAAcK,EAAIvC,EAAQsB,MAAQ,EACpCY,EAAcC,OAAS,GAEvBD,EAAcC,MAAQ,GAExBiB,YAAW,WACT7C,EAAS1D,EAAe,CAAC6C,EAASC,GAAUrD,MAC3C,QAEJ,CAACmB,IAGF,kBAAC,WAAD,KACE,kBAAC,SAAD,CACE4F,MAAOnD,EACPoB,MA7Hc,GA8HdgC,OA7He,GA8HfC,OAAQ,GACRpB,MAAOlB,EACPsB,EAAG7C,EACH+C,EAAG9C,EACH6D,IAAK3C,EAAUe,QAAQtF,KAEzB,kBAAC,SAAD,CACE+G,MAAOI,IACPnC,MAjIa,GAkIbgC,OAjIc,GAkIdC,OAAQ,GACRX,MAAO,EACPL,EAAG7C,EACH+C,EAAG9C,EACH6D,IAAK/B,EAASG,QAAQtF,OCvKxBoH,EAAY,I,KAAIC,GAAU,CAC9BC,KAAM,QACNC,SAAU,KA2DGC,EAxDG,SAAC,GAA6D,IAA3DzH,EAA0D,EAA1DA,SAAU0H,EAAgD,EAAhDA,aAAgD,IAAlC5B,aAAkC,MAA1B,EAA0B,EAAvB6B,EAAuB,EAAvBA,iBAChDzD,EAAWC,cAEX/D,EAAK4E,YAAYhF,EAASkG,EAAI,IAAMhD,EAAaC,GAGjDyE,EAAoBxH,EAFV,IACS,IAEnByH,EAAM,UAAMzH,EAAN,cAHI,KAkBV0H,EAAc,CAClB5B,EAAGlG,EAASkG,EACZE,EAAGpG,EAASoG,EACZN,SAGIiC,EAAyB,MAAVjC,EACjB,CAAEI,EAAG4B,EAAY5B,EAAI8B,IAAsB5B,EAAG0B,EAAY1B,EAAIsB,EAAe,GAC7E,CAAExB,EAAG4B,EAAY5B,EAAI8B,IAAsB5B,EAAG0B,EAAY1B,EAAIsB,EAAe,GAUjF,OAPAjC,qBAAU,WACG,IAAPrF,IACFuH,GAAiB,GACjBzD,EAASvD,QAEV,CAACP,IAGF,kBAAC,WAAD,KACE,kBAAC,WAAD,eAAU6H,KAjCM,SAACC,GACnBA,EAAEC,UAAU,SACZD,EAAEE,SAAS,EAAG,EANS,IAMYV,GACnCQ,EAAEG,YA8BiCP,IACjC,kBAAC,WAAD,eAAUG,KA5BM,SAACC,GACnBA,EAAEI,QACFJ,EAAEC,UAAU,UACZD,EAAEE,SAAS,EAAG,EAAGR,EAAkBF,GACnCQ,EAAEG,YAwBiCP,IACjC,kBAAC,OAAD,CAAMS,KAAMV,EAAQX,OAAQ,GAAKsB,MAAOnB,EAAWnB,EAAG6B,EAAa7B,EAAGE,EAAG2B,EAAa3B,M,wICjDtFqC,EAAW,CAACC,IAASC,IAAWC,IAAUC,IAAOC,IAAQC,IAAYC,IAAYC,KAEjFC,EAAmB,WAMvB,OALiB,YAAIzE,MAAM,MAAMC,KAAI,SAACyE,EAAMzD,GAAP,MAAgB,CACnDyD,KAAMzD,EACN0D,OAAQX,EAAS5D,KAAK2B,MAAM3B,KAAKE,SAAW0D,EAASY,SACrDC,KAAMzE,KAAK2B,MAAsB,IAAhB3B,KAAKE,eAKpBwE,EAAsBL,IAAmBM,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEJ,KAAOG,EAAEH,QACnEK,EAAsBT,IAAmBM,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEJ,KAAOG,EAAEH,QCX1DM,EARO,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,SAApB,OACpB,kBAACD,EAAQE,SAAT,MACG,SAAAC,GAAK,OACJJ,EAAO,kBAACC,EAAQI,SAAT,CAAkBD,MAAOA,GAAQF,QCIxCpG,EAAU,CACdsB,MAAOkF,OAAOC,WAAa,GAC3BnD,OAAQ,IACRoD,aAAa,GAmFAC,GAhFI,WACjB,IAQMC,EAAW,YAAO9F,MARE,KASpB+F,EAAW,YAAO/F,MARE,KAWpBgG,EAAqB,SAAA/E,GAAG,OAAInC,IARZ,GAQ6DsB,KAAK2B,MAAMd,EAVvE,IAWjBgF,EAAqB,SAAAhF,GAAG,OAHJ,IAG6CA,EAVhD,EAED,IAUhBiF,EAAqB,SAAAjF,GAAG,OAAI/B,EAAQsB,MAAQwF,EAAmB/E,IAC/DkF,EAAqB,SAAAlF,GAAG,OAAIgF,EAAmBhF,IAI/CmF,EAAqB,CAAE3E,EAAGvC,EAAQsB,MAAQ,GAAImB,EAAGsB,IArBhC,EAuBWoD,oBAAS,GAvBpB,mBAuBhBhH,EAvBgB,KAuBLiH,EAvBK,OAwBWD,oBAAS,GAxBpB,mBAwBhB/G,EAxBgB,KAwBLiH,EAxBK,KA0BjBlD,EAAc,CAClBvE,cAtBoB,GAuBpBC,cAtBoB,GAuBpBC,eA1BqB,EA2BrBC,eA1BqB,EA2BrBC,UACAC,kBArBwB,KAwB1B,OACE,kBAAC,EAAD,CAAekG,QAASmB,IAAmBpB,OAAQ,SAAAE,GAAQ,OAAK,kBAAC,QAAD,CAAOpG,QAASA,GAAUoG,KACxF,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAW/J,SAlBU,CAAEkG,EAAG,GAAIE,EAAG,IAkBQsB,aAnB1B,GAmBsDC,iBAAkBoD,IACvF,kBAAC,YAAD,CAAW/K,SAhCW,CAAC,EAAG,GAgCgBuG,MAAOzC,EAAY,GAAM,GAChEyG,EAAY7F,KAAI,SAAC0E,EAAQ1D,GAAT,OACf,kBAAC,EAAD,eACEwF,IAAKxF,EACLzF,MAAOyF,EACP7B,WAAY0F,EAAoB7D,GAAK0D,OACrC/F,QAASoH,EAAmB/E,GAC5BpC,QAASoH,EAAmBhF,GAC5B5B,UAAWA,EACXC,UAAWA,GACP+D,SAKZ,kBAAC,WAAD,KACE,kBAAC,EAAD,CACE9H,SAAU6K,EACVnD,aAtCa,GAuCb5B,MAAO,IACP6B,iBAAkBqD,IAEpB,kBAAC,YAAD,CAAWhL,SArDW,CAAC,EAAG,GAqDgBuG,MAAOxC,EAAY,GAAM,GAChEyG,EAAY9F,KAAI,SAAC0E,EAAQ1D,GAAT,OACf,kBAAC,EAAD,eACEwF,IAAKxF,EACLzF,MAAOyF,EACP7B,WAAY8F,EAAoBjE,GAAK0D,OACrC/F,QAASsH,EAAmBjF,GAC5BpC,QAASsH,EAAmBlF,GAC5B5B,UAAWA,EACXC,UAAWA,GACP+D,WC1EEqD,QACW,cAA7BhB,OAAOiB,SAASC,UAEe,UAA7BlB,OAAOiB,SAASC,UAEhBlB,OAAOiB,SAASC,SAASC,MACvB,2D,aCVAC,GAAQC,aACZC,EACAtB,OAAOuB,8BAAgCvB,OAAOuB,gCAGhDC,IAAS9B,OACP,kBAAC,IAAD,CAAU0B,MAAOA,IACf,kBAAC,GAAD,OAEFK,SAASC,eAAe,SDgHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.af29e5a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokeball.2b4798f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/pikachu.2d5ba1aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/bulbasaur.046230a2.svg\";","module.exports = __webpack_public_path__ + \"static/media/squirtle.bf99537f.svg\";","module.exports = __webpack_public_path__ + \"static/media/eevee.3c0ae52b.svg\";","module.exports = __webpack_public_path__ + \"static/media/gengar.c35557fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/charmander.bdb8ff2f.svg\";","module.exports = __webpack_public_path__ + \"static/media/jigglypuff.95d6187a.svg\";","module.exports = __webpack_public_path__ + \"static/media/meowth.e78d19db.svg\";","import { createActions } from 'redux-actions'\n\nexport const {\n  setTargetPosition,\n  setMyPosition,\n  setTargetReset,\n  setTeamAHP,\n  setTeamBHP,\n  setGameOver,\n} = createActions(\n  {\n    SET_TARGET_POSITION: targetPosition => ({\n      targetPosition,\n    }),\n    SET_MY_POSITION: (position, index) => ({\n      position,\n      index,\n    }),\n    SET_TARGET_RESET: (position, index) => ({\n      position,\n      index,\n    }),\n    SET_TEAM_A_H_P: hp => ({\n      hp,\n    }),\n    SET_TEAM_B_H_P: hp => ({\n      hp,\n    }),\n  },\n  'SET_GAME_OVER'\n)\n\nexport default {}\n","import { handleActions } from 'redux-actions'\n\nimport { setTargetPosition, setMyPosition, setTargetReset, setTeamAHP, setTeamBHP, setGameOver } from './action'\n\nexport const namespace = 'avatarRoom'\n\nexport const defaultState = {\n  gameOver: false,\n  teamAHp: 10000,\n  teamBHp: 10000,\n  myPositionA: [],\n  myPositionB: [],\n  targetPositionListA: {\n    avatar0: { isHit: false },\n    avatar1: { isHit: false },\n    avatar2: { isHit: false },\n    avatar3: { isHit: false },\n    avatar4: { isHit: false },\n    avatar5: { isHit: false },\n    avatar6: { isHit: false },\n    avatar7: { isHit: false },\n    avatar8: { isHit: false },\n    avatar9: { isHit: false },\n    avatar10: { isHit: false },\n    avatar11: { isHit: false },\n    avatar12: { isHit: false },\n    avatar13: { isHit: false },\n    avatar14: { isHit: false },\n    avatar15: { isHit: false },\n    avatar16: { isHit: false },\n    avatar17: { isHit: false },\n    avatar18: { isHit: false },\n    avatar19: { isHit: false },\n    avatar20: { isHit: false },\n    avatar21: { isHit: false },\n    avatar22: { isHit: false },\n    avatar23: { isHit: false },\n    avatar24: { isHit: false },\n  },\n  targetPositionListB: {\n    avatar0: { isHit: false },\n    avatar1: { isHit: false },\n    avatar2: { isHit: false },\n    avatar3: { isHit: false },\n    avatar4: { isHit: false },\n    avatar5: { isHit: false },\n    avatar6: { isHit: false },\n    avatar7: { isHit: false },\n    avatar8: { isHit: false },\n    avatar9: { isHit: false },\n    avatar10: { isHit: false },\n    avatar11: { isHit: false },\n    avatar12: { isHit: false },\n    avatar13: { isHit: false },\n    avatar14: { isHit: false },\n    avatar15: { isHit: false },\n    avatar16: { isHit: false },\n    avatar17: { isHit: false },\n    avatar18: { isHit: false },\n    avatar19: { isHit: false },\n    avatar20: { isHit: false },\n    avatar21: { isHit: false },\n    avatar22: { isHit: false },\n    avatar23: { isHit: false },\n    avatar24: { isHit: false },\n  },\n}\n\nexport default handleActions(\n  {\n    [setTargetPosition]: (state, action) => {\n      const { targetPosition } = action.payload\n\n      const index = targetPosition[0] < 600 ?\n        state.myPositionA.findIndex(\n          position => position[0] === targetPosition[0] && position[1] === targetPosition[1]\n        ) :\n        state.myPositionB.findIndex(position => position[0] === targetPosition[0] && position[1] === targetPosition[1])\n\n      if (targetPosition[0] < 600) {\n        return { ...state, targetPositionListA: { ...state.targetPositionListA, [`avatar${index}`]: { isHit: true } } }\n      } else {\n        return { ...state, targetPositionListB: { ...state.targetPositionListB, [`avatar${index}`]: { isHit: true } } }\n      }\n    },\n    [setMyPosition]: (state, action) => {\n      const { position, index } = action.payload\n      if (position[0] < 600) {\n        return { ...state, myPositionA: [...state.myPositionA, position] }\n      } else {\n        return { ...state, myPositionB: [...state.myPositionB, position] }\n      }\n    },\n    [setTargetReset]: (state, action) => {\n      const { position, index } = action.payload\n      if (position[0] < 600) {\n        return { ...state, targetPositionListA: { ...state.targetPositionListA, [`avatar${index}`]: { isHit: false } } }\n      } else {\n        return { ...state, targetPositionListB: { ...state.targetPositionListB, [`avatar${index}`]: { isHit: false } } }\n      }\n    },\n    [setTeamAHP]: (state, action) => {\n      const { hp } = action.payload\n      return {\n        ...state,\n        teamAHp: state.teamAHp > 0 ? state.teamAHp - hp : 0,\n      }\n    },\n    [setTeamBHP]: (state, action) => {\n      const { hp } = action.payload\n      return {\n        ...state,\n        teamBHp: state.teamBHp > 0 ? state.teamBHp - hp : 0,\n      }\n    },\n    [setGameOver]: state => ({\n      ...state,\n      gameOver: true,\n    }),\n  },\n  defaultState\n)\n","import { namespace } from './reducer'\n\nconst getTargetPosition = state => state.targetPosition\n\nconst getTeamAHp = state => state.teamAHp\nconst getTeamBHp = state => state.teamBHp\n\nconst getGameOver = state => state.gameOver\n\nconst getTeamAAvatarIsHit = index => state => state.targetPositionListA[`avatar${index}`].isHit\nconst getTeamBAvatarIsHit = index => state => state.targetPositionListB[`avatar${index}`].isHit\n\nexport {\n  getTargetPosition,\n  getTeamAHp,\n  getTeamBHp,\n  getGameOver,\n  getTeamAAvatarIsHit,\n  getTeamBAvatarIsHit,\n}\n","import React, { useEffect, useRef, createRef, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { Sprite, useApp } from '@inlet/react-pixi'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport {\n  setTargetPosition,\n  setMyPosition,\n  setTargetReset,\n  setTeamAHP,\n  setTeamBHP,\n} from '../../store/avatarRoom/action'\nimport pokeball from './images/pokeball.svg'\nimport { getTeamAAvatarIsHit, getTeamBAvatarIsHit } from '../../store/avatarRoom/selector'\n\nconst Avatar = ({\n  index,\n  avatarX,\n  avatarY,\n  avatarOffsetX,\n  avatarOffsetY,\n  avatarListARow,\n  avatarListACol,\n  options,\n  avatarListOffsetY,\n  avatarIcon,\n  gameOverA,\n  gameOverB,\n}) => {\n  const app = useApp()\n  const dispatch = useDispatch()\n  const actionDisabled = useRef(false)\n  let targetAvatarPosition = []\n  let shakeRate = 1\n\n  const avatarWidth = 50\n  const avatarHeight = 50\n  const avatarRef = useRef([...Array(index + 1)].map(() => createRef()))\n  const randomAngle = Math.round(Math.random() * 20 - 10)\n  const isHit = useSelector(avatarX < options.width / 2 ? getTeamAAvatarIsHit(index) : getTeamBAvatarIsHit(index))\n\n  const stuffWidth = 15\n  const stuffHeight = 15\n  const stuffRef = useRef([...Array(index + 1)].map(() => createRef()))\n\n  const gameOverARef = useRef()\n  const gameOverBRef = useRef()\n  gameOverARef.current = gameOverA\n  gameOverBRef.current = gameOverB\n\n  const currentAvatarPosition = [avatarX, avatarY]\n\n  const shake = idx => () => {\n    const currentAvatar = avatarRef.current[idx].current\n    currentAvatar.angle += shakeRate\n    if (currentAvatar.angle > 15 || currentAvatar.angle < -15) {\n      shakeRate *= -1\n    }\n  }\n\n  const handleAction = idx => () => {\n    actionDisabled.current = true\n    const currentAvatar = avatarRef.current[idx].current\n    const currentStuff = stuffRef.current[idx].current\n    const stuffX = currentStuff.x\n    const stuffY = currentStuff.y\n    const jumpHeight = currentAvatar.y - 60\n    currentAvatar.vy = 5\n    currentStuff.alpha = 1\n\n    if (currentAvatar.x > options.width / 2) {\n      targetAvatarPosition = [\n        avatarOffsetX * Math.floor(Math.random() * avatarListACol + 1),\n        avatarListOffsetY + avatarOffsetY * Math.floor(Math.random() * avatarListARow),\n      ]\n    } else {\n      targetAvatarPosition = [\n        options.width - avatarOffsetX * Math.floor(Math.random() * avatarListACol + 1),\n        avatarListOffsetY + avatarOffsetY * Math.floor(Math.random() * avatarListARow),\n      ]\n    }\n\n    const jump = () => {\n      currentAvatar.y -= currentAvatar.vy\n      if (currentAvatar.y < jumpHeight) {\n        currentAvatar.vy *= -1\n      }\n      if (currentAvatar.y >= avatarY) {\n        currentAvatar.vy = 0\n        currentAvatar.y = avatarY\n        app.ticker.remove(jump)\n      }\n    }\n\n    const shoot = (current, target) => () => {\n      const damage = 500\n\n      const stopShooting = () => {\n        currentStuff.vx = 0\n        currentStuff.vy = 0\n        app.ticker.remove(shootWithParameter)\n      }\n\n      const reset = () => {\n        currentStuff.x = stuffX\n        currentStuff.y = stuffY\n        currentStuff.alpha = 0\n      }\n\n      const isStuffArrived = (currentStuff.vx > 0 && currentStuff.x > targetAvatarPosition[0])\n      || (currentStuff.vx < 0 && currentStuff.x < targetAvatarPosition[0])\n\n      if (isStuffArrived) {\n        actionDisabled.current = false\n        dispatch(targetAvatarPosition[0] > options.width / 2 ? setTeamBHP(damage) : setTeamAHP(damage))\n        dispatch(setTargetPosition(targetAvatarPosition))\n        stopShooting()\n        reset()\n      }\n\n      currentStuff.vx = (target[0] - current[0]) / 100\n      currentStuff.vy = (target[1] - current[1]) / 100\n\n      currentStuff.x += currentStuff.vx\n      currentStuff.y += currentStuff.vy\n    }\n\n    app.ticker.add(jump)\n    const shootWithParameter = shoot(currentAvatarPosition, targetAvatarPosition)\n    app.ticker.add(shootWithParameter)\n  }\n\n  useEffect(() => {\n    dispatch(setMyPosition(currentAvatarPosition, index))\n    app.ticker.add(shake(index))\n    setInterval(() => {\n      if (!actionDisabled.current && !isHit && !(gameOverARef.current || gameOverBRef.current)) {\n        handleAction(index)()\n      }\n    }, Math.floor(Math.random() * 60000 + 1000))\n  }, [])\n\n  useEffect(() => {\n    const currentAvatar = avatarRef.current[index].current\n    if (isHit) {\n      if (currentAvatar.x < options.width / 2) {\n        currentAvatar.angle = -90\n      } else {\n        currentAvatar.angle = 90\n      }\n      setTimeout(() => {\n        dispatch(setTargetReset([avatarX, avatarY], index))\n      }, 1000)\n    }\n  }, [isHit])\n\n  return (\n    <Fragment>\n      <Sprite\n        image={avatarIcon}\n        width={avatarWidth}\n        height={avatarHeight}\n        anchor={0.5}\n        angle={randomAngle}\n        x={avatarX}\n        y={avatarY}\n        ref={avatarRef.current[index]}\n      />\n      <Sprite\n        image={pokeball}\n        width={stuffWidth}\n        height={stuffHeight}\n        anchor={0.5}\n        alpha={0}\n        x={avatarX}\n        y={avatarY}\n        ref={stuffRef.current[index]}\n      />\n    </Fragment>\n  )\n}\n\nAvatar.propTypes = {\n  index: PropTypes.number,\n  avatarX: PropTypes.number,\n  avatarY: PropTypes.number,\n  avatarOffsetX: PropTypes.number,\n  avatarOffsetY: PropTypes.number,\n  avatarListARow: PropTypes.number,\n  avatarListACol: PropTypes.number,\n  options: PropTypes.object,\n  avatarListOffsetY: PropTypes.number,\n  avatarIcon: PropTypes.string,\n  gameOverA: PropTypes.bool,\n  gameOverB: PropTypes.bool,\n}\n\nexport default Avatar\n\n","import React, { Fragment, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { Graphics, Text } from '@inlet/react-pixi'\nimport { TextStyle } from 'pixi.js'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { getTeamAHp, getTeamBHp } from '../../store/avatarRoom/selector'\nimport { setGameOver } from '../../store/avatarRoom/action'\n\nconst textStyle = new TextStyle({\n  fill: 'white',\n  fontSize: 12,\n})\n\nconst HealthBar = ({ position, healthHeight, angle = 0, setGameOverState }) => {\n  const dispatch = useDispatch()\n\n  const hp = useSelector(position.x < 750 ? getTeamAHp : getTeamBHp)\n  const totalHp = 10000\n  const healthInnerWidth = 280\n  const healthOuterWidth = (hp / totalHp) * healthInnerWidth\n  const textHp = `${hp} / ${totalHp}`\n\n  const drawCbInner = (g) => {\n    g.beginFill(0x800000)\n    g.drawRect(0, 0, healthInnerWidth, healthHeight)\n    g.endFill()\n  }\n\n  const drawCbOuter = (g) => {\n    g.clear()\n    g.beginFill(0xff0000)\n    g.drawRect(0, 0, healthOuterWidth, healthHeight)\n    g.endFill()\n  }\n\n  const commonProps = {\n    x: position.x,\n    y: position.y,\n    angle,\n  }\n\n  const textPosition = angle === 180\n    ? { x: commonProps.x - healthInnerWidth / 2, y: commonProps.y - healthHeight / 2 }\n    : { x: commonProps.x + healthInnerWidth / 2, y: commonProps.y + healthHeight / 2 }\n\n\n  useEffect(() => {\n    if (hp === 0) {\n      setGameOverState(true)\n      dispatch(setGameOver())\n    }\n  }, [hp])\n\n  return (\n    <Fragment>\n      <Graphics draw={drawCbInner} {...commonProps} />\n      <Graphics draw={drawCbOuter} {...commonProps} />\n      <Text text={textHp} anchor={0.5} style={textStyle} x={textPosition.x} y={textPosition.y} />\n    </Fragment>\n  )\n}\n\nHealthBar.propTypes = {\n  position: PropTypes.object,\n  healthHeight: PropTypes.number,\n  angle: PropTypes.number,\n  setGameOverState: PropTypes.func,\n}\n\nexport default HealthBar\n","import pikachu from './images/pikachu.svg'\nimport bulbasaur from './images/bulbasaur.svg'\nimport squirtle from './images/squirtle.svg'\nimport eevee from './images/eevee.svg'\nimport gengar from './images/gengar.svg'\nimport charmander from './images/charmander.svg'\nimport jigglypuff from './images/jigglypuff.svg'\nimport meowth from './images/meowth.svg'\n\nconst iconList = [pikachu, bulbasaur, squirtle, eevee, gengar, charmander, jigglypuff, meowth]\n\nconst generateUserList = () => {\n  const userList = [...Array(100)].map((user, idx) => ({\n    user: idx,\n    avatar: iconList[Math.floor(Math.random() * iconList.length)],\n    gift: Math.floor(Math.random() * 1000),\n  }))\n  return userList\n}\n\nconst userListAWithSorted = generateUserList().sort((a, b) => b.gift - a.gift)\nconst userListBWithSorted = generateUserList().sort((a, b) => b.gift - a.gift)\n\nexport { userListAWithSorted, userListBWithSorted }\n","import React from 'react'\n\nconst ContextBridge = ({ render, Context, children }) => (\n  <Context.Consumer>\n    {value =>\n      render(<Context.Provider value={value}>{children}</Context.Provider>)\n    }\n  </Context.Consumer>\n)\n\nexport default ContextBridge\n","import React, { useState, Fragment } from 'react'\nimport { Stage, Container } from '@inlet/react-pixi'\nimport { ReactReduxContext } from 'react-redux'\n\nimport Avatar from './Avatar'\nimport HealthBar from './HealthBar'\nimport { userListAWithSorted, userListBWithSorted } from './userList'\nimport ContextBridge from './ContextBridge'\n\nconst options = {\n  width: window.innerWidth - 15,\n  height: 450,\n  transparent: false,\n}\n\nconst AvatarRoom = () => {\n  const avatarAmountListA = 25\n  const avatarAmountListB = 25\n  const avatarListARow = 5\n  const avatarListACol = 5\n  const avatarOffsetX = 75\n  const avatarOffsetY = 75\n  const avatarListAPosition = [0, 0]\n  const avatarListBPosition = [0, 0]\n  const avatarListA = [...Array(avatarAmountListA)]\n  const avatarListB = [...Array(avatarAmountListB)]\n  const avatarListOffsetY = 100\n\n  const avatarListAAvatarX = idx => avatarOffsetX * avatarListACol - avatarOffsetX * Math.floor(idx / avatarListARow)\n  const avatarListAAvatarY = idx => avatarListOffsetY + avatarOffsetY * (idx % avatarListACol)\n\n  const avatarListBAvatarX = idx => options.width - avatarListAAvatarX(idx)\n  const avatarListBAvatarY = idx => avatarListAAvatarY(idx)\n\n  const healthHeight = 20\n  const healthBarAPosition = { x: 70, y: 20 }\n  const healthBarBPosition = { x: options.width - 75, y: healthHeight + 20 }\n\n  const [gameOverA, setGameOverA] = useState(false)\n  const [gameOverB, setGameOverB] = useState(false)\n\n  const commonProps = {\n    avatarOffsetX,\n    avatarOffsetY,\n    avatarListARow,\n    avatarListACol,\n    options,\n    avatarListOffsetY,\n  }\n\n  return (\n    <ContextBridge Context={ReactReduxContext} render={children => (<Stage options={options}>{children}</Stage>)}>\n      <Fragment>\n        <HealthBar position={healthBarAPosition} healthHeight={healthHeight} setGameOverState={setGameOverA} />\n        <Container position={avatarListAPosition} alpha={gameOverA ? 0.5 : 1}>\n          {avatarListA.map((avatar, idx) => (\n            <Avatar\n              key={idx}\n              index={idx}\n              avatarIcon={userListAWithSorted[idx].avatar}\n              avatarX={avatarListAAvatarX(idx)}\n              avatarY={avatarListAAvatarY(idx)}\n              gameOverA={gameOverA}\n              gameOverB={gameOverB}\n              {...commonProps}\n            />\n          ))}\n        </Container>\n      </Fragment>\n      <Fragment>\n        <HealthBar\n          position={healthBarBPosition}\n          healthHeight={healthHeight}\n          angle={180}\n          setGameOverState={setGameOverB}\n        />\n        <Container position={avatarListBPosition} alpha={gameOverB ? 0.5 : 1}>\n          {avatarListB.map((avatar, idx) => (\n            <Avatar\n              key={idx}\n              index={idx}\n              avatarIcon={userListBWithSorted[idx].avatar}\n              avatarX={avatarListBAvatarX(idx)}\n              avatarY={avatarListBAvatarY(idx)}\n              gameOverA={gameOverA}\n              gameOverB={gameOverB}\n              {...commonProps}\n            />\n          ))}\n        </Container>\n      </Fragment>\n    </ContextBridge>\n  )\n}\n\nexport default AvatarRoom\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AvatarRoom from './component/AvatarRoom/AvatarRoom';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport avatarRoomReducer from './store/avatarRoom/reducer';\n\nconst store = createStore(\n  avatarRoomReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <AvatarRoom />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}